<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Product Page</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .container {
        background: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 80%;
        max-width: 1200px;
        margin: 20px;
      }
      h1 {
        color: #333;
        margin-bottom: 20px;
      }
      .product {
        border-bottom: 1px solid #ccc;
        padding: 10px 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .product:last-child {
        border-bottom: none;
      }
      .product h2 {
        margin: 0;
        font-size: 18px;
        color: #333;
      }
      .product p {
        margin: 5px 0;
        color: #555;
      }
      .product button {
        padding: 10px;
        border: none;
        border-radius: 4px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
      }
      .product button:hover {
        background-color: #0056b3;
      }
      .quantity-container {
        display: flex;
        align-items: center;
      }
      .quantity-container input {
        width: 40px;
        text-align: center;
        margin: 0 5px;
      }
      #checkoutContainer {
        margin-top: 20px;
      }
      #checkoutButton {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        background-color: #28a745;
        color: #fff;
        font-size: 16px;
        cursor: pointer;
      }
      #checkoutButton:hover {
        background-color: #218838;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Product List</h1>
      <div id="productList"></div>
      <div id="checkoutContainer" style="display: none">
        <button id="checkoutButton">Checkout</button>
      </div>
    </div>

    <script>
      async function fetchProducts() {
        try {
          const response = await fetch("/api/v1/products");
          const products = await response.json();

          if (response.ok) {
            const productList = document.getElementById("productList");
            productList.innerHTML = products
              .map(
                (product) => `
                            <div class="product">
                                <div>
                                    <h2>${product.name}</h2>
                                    <p>Price: $${product.price}</p>
                                    <p>${product.description}</p>
                                </div>
                                <div class="quantity-container">
                                    <button onclick="addToCart('${product._id}', '${product.name}', ${product.price})">Add to Cart</button>
                                    <input type="number" id="quantity-${product._id}" min="1" value="1" style="display: none; width: 50px;" />
                                    <button id="update-${product._id}" onclick="updateCart('${product._id}')" style="display: none;">Update</button>
                                </div>
                            </div>
                        `
              )
              .join("");
          } else {
            throw new Error("Failed to load products");
          }
        } catch (error) {
          console.error("Error fetching products:", error);
          document.getElementById("productList").innerHTML =
            "<p>Error loading products.</p>";
        }
      }

      function addToCart(productId, name, price) {
        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        const existingProductIndex = cart.findIndex(
          (item) => item.productId === productId
        );

        if (existingProductIndex >= 0) {
          cart[existingProductIndex].quantity += 1;
        } else {
          cart.push({
            productId,
            name,
            price,
            quantity: 1,
          });
        }

        localStorage.setItem("cart", JSON.stringify(cart));
        document.getElementById("checkoutContainer").style.display = "block";
        updateProductQuantityUI(productId);
      }

      function updateProductQuantityUI(productId) {
        const quantityInput = document.getElementById(`quantity-${productId}`);
        const updateButton = document.getElementById(`update-${productId}`);
        quantityInput.style.display = "inline";
        updateButton.style.display = "inline";
      }

      function updateCart(productId) {
        const quantityInput = document.getElementById(`quantity-${productId}`);
        let quantity = parseInt(quantityInput.value, 10);
        if (isNaN(quantity) || quantity <= 0) {
          alert("Invalid quantity");
          return;
        }

        let cart = JSON.parse(localStorage.getItem("cart")) || [];
        const productIndex = cart.findIndex(
          (item) => item.productId === productId
        );

        if (productIndex >= 0) {
          cart[productIndex].quantity = quantity;
        }

        localStorage.setItem("cart", JSON.stringify(cart));
      }

      async function checkout() {
        const cart = JSON.parse(localStorage.getItem("cart")) || [];
        const customerId = "66d97ec7da80987b0901f828";

        try {
          const response = await fetch("/api/v1/createorder", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ customerId, products: cart }),
          });
          const result = await response.json();

          if (response.ok) {
            alert("Order created successfully!");
            localStorage.removeItem("cart");
            window.location.reload();
          } else {
            throw new Error(result.error || "Failed to create order");
          }
        } catch (error) {
          alert("Error creating order: " + error.message);
        }
      }

      document
        .getElementById("checkoutButton")
        .addEventListener("click", checkout);

      document.addEventListener("DOMContentLoaded", fetchProducts);
    </script>
  </body>
</html>
